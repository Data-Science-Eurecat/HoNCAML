global:
  problem_type: classification
steps:
  data:
    extract:
      filepath: data/processed/sonar_train.csv
      target:
        - '60'
  
  benchmark:
    transform:
      metrics:
        - accuracy
        - precision
        - sensitivity
        - specificity
        - f1
        - roc_auc

      models:
        - module: sklearn.ensemble.RandomForestClassifier
          search_space:
            n_estimators:
              method: randint
              values: [ 2, 110 ]
            max_features:
              method: choice
              values:
                - sqrt
                - log2
                - 1 # It means 'auto'
        - module: sklearn.neighbors.KNeighborsClassifier
          search_space:
            n_neighbors:
              method: randint
              values: [1, 100]
            weights:
              method: choice
              values:
                - uniform
                - distance

      cross_validation:
        strategy: k_fold
        n_splits: 2
        shuffle: True
        random_state: 90

      tuner:
        search_algorithm:
          module: ray.tune.search.optuna.OptunaSearch
          params:
        tune_config:
          num_samples: 5
          metric: accuracy
          mode: max
        run_config:
          stop:
            training_iteration: 2
        scheduler:
          module: ray.tune.schedulers.HyperBandScheduler
          params:

  model:
    transform:
      fit:
        cross_validation:
          strategy: k_fold
          n_splits: 2
          shuffle: True
          random_state: 90

    load:
      path: data/models/