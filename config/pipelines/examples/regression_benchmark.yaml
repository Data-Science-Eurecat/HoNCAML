global:
  problem_type: regression
steps:
  data:
    extract:
      filepath: data/processed/kc_house_data_train.csv
      features:
        - bedrooms
        - bathrooms
        - sqft_living
        - sqft_lot
        - floors
        - waterfront
        - view
        - condition
        - grade
        - sqft_above
        - sqft_basement
        - yr_built
        - yr_renovated
        - zipcode
        - lat
        - long
        - sqft_living15
        - sqft_lot15
      target:
        - price
    
    transform:
      normalize:
        features:
          module: sklearn.preprocessing.StandardScaler
          module_params:
            with_std: True
          columns:
            - sqft_living
            - sqft_lot
            - sqft_above
            - sqft_basement
            - sqft_living15
            - sqft_lot15
        target:
          module: sklearn.preprocessing.StandardScaler
          module_params:
            with_std: True
          columns:
            - price
  
  benchmark:
    transform:
      metrics:
        - mean_squared_error
        - mean_absolute_percentage_error
        - median_absolute_error
        - r2_score
        - mean_absolute_error
        - root_mean_square_error

      models:
        - module: sklearn.ensemble.RandomForestRegressor
          search_space:
            n_estimators:
              method: randint
              values: [ 2, 110 ]
            max_features:
              method: choice
              values:
                - sqrt
                - log2
                - 1 # It means 'auto'
        - module: sklearn.linear_model.LinearRegression
          search_space:
            fit_intercept:
              method: choice
              values:
                - True
                - False

      cross_validation:
        strategy: k_fold
        n_splits: 2
        shuffle: True
        random_state: 90

      tuner:
        search_algorithm:
          module: ray.tune.search.optuna.OptunaSearch
          params:
        tune_config:
          num_samples: 5
          metric: root_mean_square_error
          mode: min
        run_config:
          stop:
            training_iteration: 2
        scheduler:
          module: ray.tune.schedulers.HyperBandScheduler
          params:

  model:
    transform:
      fit:
        cross_validation:
          strategy: k_fold
          n_splits: 2
          shuffle: True
          random_state: 90

    load:
      path: data/models/
