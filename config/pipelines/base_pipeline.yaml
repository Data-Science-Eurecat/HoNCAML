data:
  extract:
    filepath: data/raw/boston_housing.csv
    # If features key does not exist, the pipeline gets all columns as features
    features:
      - lstat
      - indus
      - nox
      - ptratio
      - rm
      - tax
      - dis
      - age
    target:
      - medv
    # pandas read files additional params
#    dtype:
#      col1: int
#      col2: int

  transform:
    normalize:
      features:
        module: sklearn.preprocessing.StandardScaler
        module_params:
          with_std: True
        columns:
          - lstat
          - indus
          - nox
          - ptratio
          - rm
          - tax
          - dis
          - age
      target:
        module: sklearn.preprocessing.StandardScaler
        columns:
          - medv

# load:
# filepath: data/processed/dataset.csv

#benchmark:
#  transform:
#    models:
#      - module: sklearn.ensemble.RandomForestRegressor
#        search_space:
#          - n_estimators:
#            method: randint
#            value: [2, 10]
#
#      - module: sklearn.linear_model.LinearRegression
#        search_space:
#          - fit_intercept:
#            method: choice
#            value: [True, False]
#    search_algorithm:

# Model Step settings
model:
  estimator_type: regressor # | classifier
  estimator_config:
    module: sklearn.ensemble.RandomForestRegressor
    hyperparameters:
      n_estimators: 100
#  extract:
#    filepath: models/sklearn.regressor.20220819-122417.sav

  transform:
    fit: # | predict
      cross_validation:
        strategy: k_fold
        # Additional arguments of sklearn cross-validation objects
        n_splits: 5
        # random_seed: 90
        random_state: 90

#  load:
#    path: models/

  # Benchmark Step settings
