### Settings file
# This file is intended to contain specific project parameters

logging:
  formatter:
    format: '%(asctime)s - %(message)s'
    time_format: '%Y-%m-%d %H:%M:%S'
  level: INFO
  file: data/logs/{exec_name}.log

# Path of pipelines folder
pipeline_folder: config/pipelines

# Path of model.yaml
models_config_path: config/models.yaml

# Reports folder
reports_folder: reports/
metrics_folder: reports/metrics/

# Pipeline validation rules
pipeline_rules:

# Step validation rules
step_rules:
  data:
    extract:
      filepath:
        - required: True
      target:
        - required: True
    transform:
      normalize:
        features:
          module:
            - required: True
        target:
          module:
            - required: True
    load:
      path:
        - required: True
  model:
    extract:
      filepath:
        - required: True
    transform:
      fit:
        cross_validation:
          strategy:
            - required: True
      predict:
        path:
          - required: True
    load:
      path:
        - required: True
  benchmark:

# Default estimators
default_regressor_estimator:
  module: sklearn.ensemble.RandomForestRegressor
  hyper_parameters:
    n_estimators: 100

# Pipeline steps settings (default settings for each pipeline steps)
pipeline_steps:
  # Data Step settings
  data:
    extract:
      filepath: data/raw/dataset.csv

    transform:
      normalize:
        features:
          module: sklearn.preprocessing.StandardScaler
        target:
          module: sklearn.preprocessing.StandardScaler

    # load:
    #  filepath: data/processed/dataset.csv

  # Model Step settings
  model:
    extract:
      filepath: models/sklearn.regressor.20220819-122417.sav

    transform:
      fit:
        cross_validation:
          strategy: k_fold
          n_splits: 10
          shuffle: True
          random_state: 90
      predict:
        path: data/processed

    load:
      path: data/models/

  # Benchmark Step settings
  benchmark:
    extract:
    # read a previously saved learner
    transform:
      metrics:
        - mean_squared_error
        - mean_absolute_percentage_error
        - median_absolute_error
        - r2_score
        - mean_absolute_error
        - root_mean_square_error
      tuner:
        algorithm: ray.tune.search.optuna.OptunaSearch
        # TODO (future): paràmetres de l'algorisme de cerca
        # TODO (future): + paràmetres del tuner
        # TODO (future): tune_config:
        # TODO (future): run_config:

        # TODO (future): schedulers:
        # TODO (future): callbacks:

        models:
          - module: sklearn.ensemble.RandomForestRegressor
            search_space:
              n_estimators:
                method: randint
                value: [ 2, 10 ]

        cross_validation:
          strategy: k_fold
          n_splits: 2
          shuffle: True
          random_state: 90

    load:
    # save the learner to disk and the results

# Available models settings
models:
# List the models with their available hyperparameters to tune
# with their limits.

