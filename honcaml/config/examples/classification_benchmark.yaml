global:
  problem_type: classification

logging:
  level: DEBUG

steps:
  data:
    extract:
      filepath: data/processed/bank_train.csv
      target: class

  benchmark:
    transform:

      models:
        sklearn.ensemble.RandomForestClassifier:
          n_estimators:
            method: randint
            values: [ 2, 110 ]
          max_features:
            method: choice
            values:
              - sqrt
              - log2
              - 1 # It means 'auto'
        sklearn.neighbors.KNeighborsClassifier:
          n_neighbors:
            method: randint
            values: [ 1, 100 ]
          weights:
            method: choice
            values:
              - uniform
              - distance

      cross_validation:
        module: sklearn.model_selection.KFold
        params:
          n_splits: 2
          shuffle: True
          random_state: 90

      tuner:
        search_algorithm:
          module: ray.tune.search.optuna.OptunaSearch
          params:
        tune_config:
          num_samples: 5
          metric: roc_auc_score
          mode: max
        run_config:
          stop:
            training_iteration: 2
        scheduler:
          module: ray.tune.schedulers.HyperBandScheduler
          params:

      metrics:
        - accuracy_score
        - f1_score:
            average: macro

    load:
      save_best_config_params: True
      path: reports

  model:
    transform:
      fit:
        cross_validation:
        module: sklearn.model_selection.KFold
        params:
          n_splits: 2
          shuffle: True
          random_state: 90

    load:
      filepath: data/models/sklearn_classification_benchmark.sav
